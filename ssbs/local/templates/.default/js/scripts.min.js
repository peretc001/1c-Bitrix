BX.ready(function() {

    if ( document.querySelector('.menu') ) {

        const nav = document.querySelector('.mobile-menu');
        const navBtn = document.querySelector('.hamburger');

        const layout = document.createElement('div')
        layout.classList.add('layout')

        navBtn.addEventListener('click', openMenu);

        function openMenu() {
            document.body.classList.add('disabled')
            nav.classList.add('fade')
            document.body.appendChild(layout)
            setTimeout(() => {
                nav.classList.add('open')
                layout.classList.add('open')
                nav.querySelectorAll('a').forEach(item => item.addEventListener('click', closeMenu))
                layout.addEventListener('click', closeMenu)

            }, 50)
        }

        function closeMenu() {
            document.body.classList.add('disabled')
            nav.classList.remove('open')
            layout.classList.remove('open')
            setTimeout(() => {
                nav.classList.remove('fade')
                layout.classList.remove('fade')

                layout.removeEventListener('click', closeMenu)
                nav.querySelectorAll('a').forEach(item => item.removeEventListener('click', closeMenu))
                document.body.classList.remove('disabled')
                layout.parentNode.removeChild(layout)
            }, 300)
        }
    }

    if (document.querySelectorAll('.callback__form')) {
        const form = document.querySelectorAll('.callback__form');
        form.forEach(form => {

            form.querySelectorAll('input').forEach(item => {

                const prev = item.previousElementSibling

                item.addEventListener('input', () => {
                    if (prev) {
                        if (item.value.length > 0 && prev.classList.contains('js-placeholder'))
                        {
                            item.previousElementSibling.style.display = 'none'
                        }
                        else if (item.value.length == 0 && prev.classList.contains('js-placeholder'))
                        {
                            item.previousElementSibling.style.display = 'block'
                        }
                    }
                })

                item.addEventListener('focus', () => {
                    if (prev && item.classList.contains('phone_mask'))
                    {
                        item.previousElementSibling.style.display = 'none'
                    }
                })
                item.addEventListener('blur', () => {
                    if (prev && item.classList.contains('phone_mask') && item.value.length === 0)
                    {
                        item.previousElementSibling.style.display = 'block'
                    }
                })


            })


            form.addEventListener('submit', (e) => {
                e.preventDefault()

                if (form.querySelector('input[name="name"]').value.length < 3) {
                    form.querySelector('input[name="name"]').parentNode.classList.add('fatal')
                    setTimeout(() => {
                        form.querySelector('input[name="name"]').parentNode.classList.remove('fatal')
                    }, 300);
                }

                if (form.querySelector('input[name="phone"]').value.length <= 17) {
                    form.querySelector('input[name="phone"]').parentNode.classList.add('fatal')
                    setTimeout(() => {
                        form.querySelector('input[name="phone"]').parentNode.classList.remove('fatal')
                    }, 300);
                }

                if (!validateEmail(form.querySelector('input[name="email"]').value)) {
                    form.querySelector('input[name="email"]').parentNode.classList.add('fatal')
                    setTimeout(() => {
                        form.querySelector('input[name="email"]').parentNode.classList.remove('fatal')
                    }, 300);
                }

                function validateEmail(email)
                {
                    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                    return re.test(email);
                }

                if (
                    form.querySelector('input[name="name"]').value.length >= 3
                    && form.querySelector('input[name="phone"]').value.length >= 18
                    && validateEmail(form.querySelector('input[name="email"]').value)
                )
                {

                    const formData = {
                        title: form.querySelector('input[name="title"]').value,
                        name: form.querySelector('input[name="name"]').value,
                        phone: form.querySelector('input[name="phone"]').value,
                        email: form.querySelector('input[name="email"]').value,
                    }

                    if ( form.querySelector('input[name="site"]') )     formData.site = form.querySelector('input[name="site"]').value
                    if ( form.querySelector('input[name="industry"]') ) formData.industry = form.querySelector('input[name="industry"]').value
                    if ( form.querySelector('textarea[name="msg"]') )   formData.msg = form.querySelector('textarea[name="msg"]').value

                    document.body.classList.add('preloader')

                    $.ajax({
                        url: "/api/v1/bitrix24.php",
                        type: 'post',
                        dataType: "json",
                        data: {
                            data: JSON.stringify(formData)
                        },
                        success: function (data) {
                            if (data) {
                                document.querySelector('.response.good').classList.add('fade')

                                setTimeout(() => {
                                    document.querySelector('.response.good').classList.add('is-active')
                                    document.body.classList.remove('preloader')

                                    setTimeout(() => {
                                        document.querySelector('.response.good').classList.remove('is-active')

                                        setTimeout(() => {
                                            document.querySelector('.response.good').classList.remove('fade')

                                            form.querySelector('input[name="name"]').value = ''
                                            form.querySelector('input[name="phone"]').value = ''
                                            form.querySelector('input[name="email"]').value = ''
                                            if (form.querySelector('input[name="site"]')) form.querySelector('input[name="site"]').value = ''
                                            if (form.querySelector('input[name="industry"]')) form.querySelector('input[name="industry"]').value = ''
                                            if (
                                                form.querySelector('input[name="industry"]')
                                                && form.querySelector('.select p.changed')
                                            )
                                            {
                                                form.querySelector('.select p').classList.remove('changed')
                                                form.querySelector('.select p').textContent = 'Отрасль'
                                            }
                                            if (form.querySelector('textarea')) form.querySelector('textarea').value = ''

                                            form.querySelectorAll('.js-placeholder').forEach(item => item.style.display = 'block')

                                            const modal = document.querySelector('.modal')
                                            const current = modal.querySelector('.is-active')

                                            modal.classList.remove('is-active')
                                            current.classList.remove('is-active')
                                            setTimeout(() => {
                                                modal.classList.remove('fade')
                                                current.classList.remove('fade')

                                                if (document.body.clientWidth < 1024) document.body.classList.remove('disabled')
                                            }, 10);


                                        }, 300)
                                    }, 2000)
                                }, 100)
                            } else {
                                document.querySelector('.response.error').classList.add('fade')

                                setTimeout(() => {
                                    document.querySelector('.response.error').classList.add('is-active')
                                    document.body.classList.remove('preloader')

                                    setTimeout(() => {
                                        document.querySelector('.response.error').classList.remove('is-active')

                                        setTimeout(() => {
                                            document.querySelector('.response.error').classList.remove('fade')
                                        }, 300)
                                    }, 2000)
                                }, 100)
                            }
                        }
                    });
                }
                else {
                    console.log('Не заполнены обязательные поля')
                }
            })
        })
    }

    if (document.querySelectorAll('[data-modal]')) {
        const modal = document.querySelector('.modal')
        const modalBtn = document.querySelectorAll('[data-modal]')

        modalBtn.forEach(button => {
            button.addEventListener('click', (e) => openModal(button.dataset.modal, button.dataset.form))
        })

        function openModal(popup, title) {
            const current = modal.querySelector(`.${popup}`)
            current.querySelector('.title').value = title

            if (document.body.clientWidth < 1024) document.body.classList.add('disabled')

            modal.classList.add('fade')
            current.classList.add('fade')
            setTimeout(() => {
                modal.classList.add('is-active')
                current.classList.add('is-active')
                modal.addEventListener('click', closeModal)
                document.addEventListener('keyup', closeModalEsc)
            }, 10);
        }


        function closeModalEsc(event) {
            const current = modal.querySelector('.modal-body.is-active')

            if (event.keyCode == 27 || event.keyCode == 'Escape') {
                closeModal(event)
            }
        }

        function closeModal(event) {
            const current = modal.querySelector('.modal-body.is-active')

            if (!current.contains(event.target)) {
                modal.classList.remove('is-active')
                current.classList.remove('is-active')
                setTimeout(() => {
                    modal.classList.remove('fade')
                    current.classList.remove('fade')
                    modal.removeEventListener('click', closeModal)
                    document.removeEventListener('keyup', closeModalEsc)

                    if (document.body.clientWidth < 1024) document.body.classList.remove('disabled')
                }, 10);
            }
        }
    }

    if (document.querySelector('.select')) {
        const select = document.querySelector('.select');
        const layout = document.createElement('div')
        layout.classList.add('layout')

        select.addEventListener('click', openSelect)
        select.querySelectorAll('li').forEach(item => item.addEventListener('click', changeSelect))

        function openSelect(e) {
            select.removeEventListener('click', openSelect)
            select.classList.add('active')

            document.body.appendChild(layout)
            layout.addEventListener('click', closeSelect)
        }

        function closeSelect() {
            select.classList.remove('active')

            layout.removeEventListener('click', closeSelect)
            layout.parentNode.removeChild(layout)
            setTimeout(() => {
                select.addEventListener('click', openSelect)
            }, 50);
        }

        function changeSelect(e) {
            select.querySelector('p').textContent = e.target.textContent
            select.querySelector('p').classList.add('changed')
            select.querySelector('.industry').value = e.target.dataset.value
            closeSelect()
        }

    }


    if (document.querySelector('.scroll-to')) {
        $('a.scroll-to').on('click', function(e) {
            event.preventDefault();
            $('html,body').animate({scrollTop:$(this.hash).offset().top-120}, 500);
        })
    }

    $(window).scroll(function() {
        if($(this).scrollTop() > 10) {
            $('.menu').addClass('active');
        } else {
            if ($('.menu').hasClass('active')) $('.menu').removeClass('active');
        }
    });

    $(window).on("scroll resize", function () {
        let o = $(window).scrollTop() / ($(document).height() - $(window).height());
        let progressWidth = 102 * o | 0;
        $(".progress-bar").css({
            "width": progressWidth + "%"
        });
    })

    let inputs = document.querySelectorAll('.phone_mask');

    Array.prototype.forEach.call(inputs, function(input) {
        new InputMask({
            selector: input,
            layout: input.dataset.mask
        })
        input.addEventListener('click', function() {
            if (this.value == '+7') this.setSelectionRange(2,2);
        })
    })

});

function InputMask(options) {
    this.el = this.getElement(options.selector);
    this.layout = options.layout || '+7 (___) ___-__-__';
    this.maskreg = this.getRegexp();
    this.setListeners();
}

InputMask.prototype.getRegexp = function() {
    var str = this.layout.replace(/_/g, '\\d')
    str = str.replace(/\(/g, '\\(')
    str = str.replace(/\)/g, '\\)')
    str = str.replace(/\+/g, '\\+')
    str = str.replace(/\s/g, '\\s')

    return str;
}

InputMask.prototype.mask = function(e) {
    var _this = e.target,
        matrix = this.layout,
        i = 0,
        def = matrix.replace(/\D/g, ""),
        val = _this.value.replace(/\D/g, "");

    if (def.length >= val.length) val = def;

    _this.value = matrix.replace(/./g, function(a) {
        return /[_\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? "" : a
    });

    if (e.type == "blur") {
        var regexp = new RegExp(this.maskreg);
        if (!regexp.test(_this.value)) _this.value = "";
    } else {
        this.setCursorPosition(_this.value.length, _this);
    }
}

InputMask.prototype.setCursorPosition = function(pos, elem) {
    elem.focus();
    if (elem.setSelectionRange) elem.setSelectionRange(pos, pos);
    else if (elem.createTextRange) {
        var range = elem.createTextRange();
        range.collapse(true);
        range.moveEnd("character", pos);
        range.moveStart("character", pos);
        range.select()
    }
}

InputMask.prototype.setListeners = function() {
    this.el.addEventListener("input", this.mask.bind(this), false);
    this.el.addEventListener("focus", this.mask.bind(this), false);
    this.el.addEventListener("blur", this.mask.bind(this), false);
}

InputMask.prototype.getElement = function(selector) {
    if (selector === undefined) return false;
    if (this.isElement(selector)) return selector;
    if (typeof selector == 'string') {
        var el = document.querySelector(selector);
        if (this.isElement(el)) return el;
    }
    return false
}

InputMask.prototype.isElement = function(element) {
    return element instanceof Element || element instanceof HTMLDocument;
}
